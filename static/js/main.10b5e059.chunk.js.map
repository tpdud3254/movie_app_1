{"version":3,"sources":["Movie.js","App.js","index.js"],"names":["Movie","_ref","year","title","summary","poster","genres","react_default","a","createElement","className","src","alt","map","genre","index","key","slice","App","state","isLoading","movies","getMovies","_callee","_yield$axios$get","regenerator_default","wrap","_context","prev","next","axios","get","sent","data","console","log","_this","setState","stop","this","_this$state","movie","src_Movie","id","medium_cover_image","React","Component","ReactDOM","render","StrictMode","src_App_0","document","getElementById"],"mappings":"0SAwCeA,MA3Bf,SAAAC,GAAuD,IAAvCC,EAAuCD,EAAvCC,KAAMC,EAAiCF,EAAjCE,MAAOC,EAA0BH,EAA1BG,QAASC,EAAiBJ,EAAjBI,OAAQC,EAASL,EAATK,OAC1C,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACXH,EAAAC,EAAAC,cAAA,OAAKE,IAAKN,EAAQO,IAAKT,EAAOA,MAAOA,IACrCI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,gBAAgBP,GAC9BI,EAAAC,EAAAC,cAAA,MAAIC,UAAU,iBACTJ,EAAOO,IAAI,SAACC,EAAOC,GAAR,OACRR,EAAAC,EAAAC,cAAA,MAAIO,IAAKD,EAAOL,UAAU,iBAAiBI,MAGnDP,EAAAC,EAAAC,cAAA,MAAIC,UAAU,eAAeR,GAC7BK,EAAAC,EAAAC,cAAA,KAAGC,UAAU,kBAAkBN,EAAQa,MAAM,EAAG,KAAhD,WC2BDC,oNA7CbC,MAAQ,CACNC,WAAW,EACXC,OAAQ,MAGVC,+BAAY,SAAAC,IAAA,IAAAC,EAAAH,EAAA,OAAAI,EAAAjB,EAAAkB,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAC6BC,IAAMC,IAAI,0DADvC,OAAAP,EAAAG,EAAAK,KACWX,EADXG,EACHS,KAAOA,KAAOZ,OACrBa,QAAQC,IAAId,GAKZe,EAAKC,SAAS,CAAEhB,SAAQD,WAAW,IAPzB,wBAAAO,EAAAW,SAAAf,yFAcVgB,KAAKjB,6CAWE,IAAAkB,EACuBD,KAAKpB,MAA3BC,EADDoB,EACCpB,UAAWC,EADZmB,EACYnB,OAEnB,OAAOd,EAAAC,EAAAC,cAAA,WAASC,UAAU,aACvBU,EAAYb,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UAAf,IAAyBH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,gBAAhB,eACpCH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACZW,EAAOR,IAAI,SAAA4B,GAAK,OACflC,EAAAC,EAAAC,cAACiC,EAAD,CAAO1B,IAAKyB,EAAME,GAAIA,GAAIF,EAAME,GAAIzC,KAAMuC,EAAMvC,KAAMC,MAAOsC,EAAMtC,MAAOC,QAASqC,EAAMrC,QAASC,OAAQoC,EAAMG,mBAAoBtC,OAAQmC,EAAMnC,oBAtC5IuC,IAAMC,YCFxBC,IAASC,OACPzC,EAAAC,EAAAC,cAACF,EAAAC,EAAMyC,WAAP,KACE1C,EAAAC,EAAAC,cAACyC,EAAD,OAEFC,SAASC,eAAe","file":"static/js/main.10b5e059.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./Movie.css\";\n\n//Movie.js는 state를 필요로 하지 않음. state가 필요하지 않으면 굳이 class component를 쓸 필요가 없음\n\n\n// function component의 인자로 props 말고 props의 특정 값만 가져올 때는 꼭 curly bracket으로 감싸주세요 당연한 건데 놓쳐가지고 어리둥절 했네요 😇\n\n// ex)\n// function Movies( id, year, title, summary, poster) { ... } // X\n// function Movies( {id, year, title, summary, poster}) {...} // O\n\nfunction Movie({year, title, summary, poster, genres}) {\n    return (\n        <div className=\"movie\">\n            <img src={poster} alt={title} title={title} ></img>\n            <div className=\"movie__data\">\n                <h3 className=\"movie__title\">{title}</h3>\n                <ul className=\"movie__genres\">\n                    {genres.map((genre, index) => (\n                        <li key={index} className=\"genres__genre\">{genre}</li>\n                    ))}\n                </ul>\n                <h5 className=\"movie__year\">{year}</h5>\n                <p className=\"movie__summary\">{summary.slice(0, 140)} ...</p>\n            </div>\n        </div>\n    )\n}\n\nMovie.propTypes = {\n    id: PropTypes.number.isRequired,\n    year: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n    summary: PropTypes.string.isRequired,\n    poster: PropTypes.string.isRequired,\n    genres: PropTypes.arrayOf(PropTypes.string).isRequired\n};\n\nexport default Movie;","\nimport React from \"react\";\nimport axios from \"axios\";\nimport Movie from \"./Movie\";\nimport \"./App.css\";\n\nclass App extends React.Component { \n  state = {\n    isLoading: true,\n    movies: []\n  }\n\n  getMovies = async () => {\n    const {data: {data: {movies}}} = await axios.get(\"https://yts-proxy.nomadcoders1.now.sh/list_movies.json\");\n    console.log(movies);\n\n    // const movies = await axios.get(\"https://yts-proxy.nomadcoders1.now.sh/list_movies.json?sort_by=rating\");\n    // console.log(movies.data.data.movies);\n\n    this.setState({ movies, isLoading: false });\n    // this.setState({ movies : movies }); //같은 표현, 앞에거는 state의 movies고 뒤에는 axios로 가져온 movies\n  };\n  //async : 이 함수는 비동기야. 너는 이걸 기다려야해.\n  //await : 내가 뭘 기다리길 원해?  -> axios\n\n  componentDidMount() {\n    this.getMovies();\n  }\n\n  /*\n  따로 함수 안쓸거면 이렇게만 해줘도됨\n  async componentDidMount() {\n    const movies = axios.get(\"https://yts-proxy.nomadcoders1.now.sh/list_movies.json\");\n  }\n  axios는 마치 fetch위에 있는 작은 layer\n  */\n\n  render() {\n    const { isLoading, movies } = this.state;\n\n    return <section className=\"container\" >\n      {isLoading ? <div className=\"loader\"> <span className=\"loader__text\">Loading...</span></div> : (\n        <div className=\"movies\">\n          {movies.map(movie => (\n            <Movie key={movie.id} id={movie.id} year={movie.year} title={movie.title} summary={movie.summary} poster={movie.medium_cover_image} genres={movie.genres} />\n          ))}\n        </div>\n      )}\n    </section>\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}